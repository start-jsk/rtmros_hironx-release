# Python stubs generated by omniidl from /home/k-okada/catkin_ws/ws_old_hrpsys/build/hrpsys/build/hrpsys-base-source/idl/AbsoluteForceSensorService.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "OpenHRP"
#
__name__ = "OpenHRP"
_0_OpenHRP = omniORB.openModule("OpenHRP", r"/home/k-okada/catkin_ws/ws_old_hrpsys/build/hrpsys/build/hrpsys-base-source/idl/AbsoluteForceSensorService.idl")
_0_OpenHRP__POA = omniORB.openModule("OpenHRP__POA", r"/home/k-okada/catkin_ws/ws_old_hrpsys/build/hrpsys/build/hrpsys-base-source/idl/AbsoluteForceSensorService.idl")


# interface AbsoluteForceSensorService
_0_OpenHRP._d_AbsoluteForceSensorService = (omniORB.tcInternal.tv_objref, "IDL:OpenHRP/AbsoluteForceSensorService:1.0", "AbsoluteForceSensorService")
omniORB.typeMapping["IDL:OpenHRP/AbsoluteForceSensorService:1.0"] = _0_OpenHRP._d_AbsoluteForceSensorService
_0_OpenHRP.AbsoluteForceSensorService = omniORB.newEmptyClass()
class AbsoluteForceSensorService :
    _NP_RepositoryId = _0_OpenHRP._d_AbsoluteForceSensorService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    
    # typedef ... DblSequence3
    class DblSequence3:
        _NP_RepositoryId = "IDL:OpenHRP/AbsoluteForceSensorService/DblSequence3:1.0"
        def __init__(self, *args, **kw):
            raise RuntimeError("Cannot construct objects of this type.")
    _d_DblSequence3  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 3)
    _ad_DblSequence3 = (omniORB.tcInternal.tv_alias, DblSequence3._NP_RepositoryId, "DblSequence3", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_double, 3))
    _tc_DblSequence3 = omniORB.tcInternal.createTypeCode(_ad_DblSequence3)
    omniORB.registerType(DblSequence3._NP_RepositoryId, _ad_DblSequence3, _tc_DblSequence3)
    
    # struct forcemomentOffsetParam
    _0_OpenHRP.AbsoluteForceSensorService.forcemomentOffsetParam = omniORB.newEmptyClass()
    class forcemomentOffsetParam (omniORB.StructBase):
        _NP_RepositoryId = "IDL:OpenHRP/AbsoluteForceSensorService/forcemomentOffsetParam:1.0"

        _NP_ClassName = "OpenHRP.AbsoluteForceSensorService.forcemomentOffsetParam"

        def __init__(self, force_offset, moment_offset, link_offset_centroid, link_offset_mass):
            self.force_offset = force_offset
            self.moment_offset = moment_offset
            self.link_offset_centroid = link_offset_centroid
            self.link_offset_mass = link_offset_mass
    
    _d_forcemomentOffsetParam  = _0_OpenHRP.AbsoluteForceSensorService._d_forcemomentOffsetParam = (omniORB.tcInternal.tv_struct, forcemomentOffsetParam, forcemomentOffsetParam._NP_RepositoryId, "forcemomentOffsetParam", "force_offset", omniORB.typeMapping["IDL:OpenHRP/AbsoluteForceSensorService/DblSequence3:1.0"], "moment_offset", omniORB.typeMapping["IDL:OpenHRP/AbsoluteForceSensorService/DblSequence3:1.0"], "link_offset_centroid", omniORB.typeMapping["IDL:OpenHRP/AbsoluteForceSensorService/DblSequence3:1.0"], "link_offset_mass", omniORB.tcInternal.tv_double)
    _tc_forcemomentOffsetParam = omniORB.tcInternal.createTypeCode(_d_forcemomentOffsetParam)
    omniORB.registerType(forcemomentOffsetParam._NP_RepositoryId, _d_forcemomentOffsetParam, _tc_forcemomentOffsetParam)


_0_OpenHRP.AbsoluteForceSensorService = AbsoluteForceSensorService
_0_OpenHRP._tc_AbsoluteForceSensorService = omniORB.tcInternal.createTypeCode(_0_OpenHRP._d_AbsoluteForceSensorService)
omniORB.registerType(AbsoluteForceSensorService._NP_RepositoryId, _0_OpenHRP._d_AbsoluteForceSensorService, _0_OpenHRP._tc_AbsoluteForceSensorService)

# AbsoluteForceSensorService operations and attributes
AbsoluteForceSensorService._d_setForceMomentOffsetParam = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:OpenHRP/AbsoluteForceSensorService/forcemomentOffsetParam:1.0"]), (omniORB.tcInternal.tv_boolean, ), None)
AbsoluteForceSensorService._d_getForceMomentOffsetParam = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_boolean, omniORB.typeMapping["IDL:OpenHRP/AbsoluteForceSensorService/forcemomentOffsetParam:1.0"]), None)

# AbsoluteForceSensorService object reference
class _objref_AbsoluteForceSensorService (CORBA.Object):
    _NP_RepositoryId = AbsoluteForceSensorService._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def setForceMomentOffsetParam(self, *args):
        return _omnipy.invoke(self, "setForceMomentOffsetParam", _0_OpenHRP.AbsoluteForceSensorService._d_setForceMomentOffsetParam, args)

    def getForceMomentOffsetParam(self, *args):
        return _omnipy.invoke(self, "getForceMomentOffsetParam", _0_OpenHRP.AbsoluteForceSensorService._d_getForceMomentOffsetParam, args)

    __methods__ = ["setForceMomentOffsetParam", "getForceMomentOffsetParam"] + CORBA.Object.__methods__

omniORB.registerObjref(AbsoluteForceSensorService._NP_RepositoryId, _objref_AbsoluteForceSensorService)
_0_OpenHRP._objref_AbsoluteForceSensorService = _objref_AbsoluteForceSensorService
del AbsoluteForceSensorService, _objref_AbsoluteForceSensorService

# AbsoluteForceSensorService skeleton
__name__ = "OpenHRP__POA"
class AbsoluteForceSensorService (PortableServer.Servant):
    _NP_RepositoryId = _0_OpenHRP.AbsoluteForceSensorService._NP_RepositoryId


    _omni_op_d = {"setForceMomentOffsetParam": _0_OpenHRP.AbsoluteForceSensorService._d_setForceMomentOffsetParam, "getForceMomentOffsetParam": _0_OpenHRP.AbsoluteForceSensorService._d_getForceMomentOffsetParam}

AbsoluteForceSensorService._omni_skeleton = AbsoluteForceSensorService
_0_OpenHRP__POA.AbsoluteForceSensorService = AbsoluteForceSensorService
omniORB.registerSkeleton(AbsoluteForceSensorService._NP_RepositoryId, AbsoluteForceSensorService)
del AbsoluteForceSensorService
__name__ = "OpenHRP"

#
# End of module "OpenHRP"
#
__name__ = "AbsoluteForceSensorService_idl"

_exported_modules = ( "OpenHRP", )

# The end.
